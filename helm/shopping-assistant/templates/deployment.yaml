apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: shoppingassistant in {{ .Values.env }}
  labels:
    app: {{ .Values.app }}
    env: {{ .Values.env }}
    region: {{ .Values.region }}
    release: {{ .Release.Name }}
  name: {{ include "shoppingassistant.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.app }}
      env: {{ .Values.env }}
      region: {{ .Values.region }}
      release: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ .Values.app }}
        env: {{ .Values.env }}
        region: {{ .Values.region }}
        release: {{ .Release.Name }}
        {{- range $key, $val := .Values.additional_labels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
      annotations:
        version: {{ .Values.releaseTag }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- range $key, $val := .Values.service.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: aws-secret
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: aws-secret
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  key: EMBEDDINGS_API_KEY
                  name: embedding-secret
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.targetPort.name }}
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.targetPort.name }}
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}